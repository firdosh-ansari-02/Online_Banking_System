/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * signin.java
 *
 * Created on Sep 1, 2018, 5:49:42 PM
 */
/**
 *
 * @author Firdosh
 */
import java.awt.Color;
import java.math.BigDecimal;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

public class Home extends javax.swing.JFrame {

    Connection connection;
    Statement statement;
    ResultSet resultSet;
    String customerId = "IND-BANK-9717367864";

    /**
     * Creates new form signin
     */
    public Home() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        initializeDataSource();
        showCustomerInformation();
    }

    public Home(String customer_id) {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        initializeDataSource();
        customerId = customer_id;
        showCustomerInformation();
    }

    private void initializeDataSource() {
        try {
            Class.forName("java.sql.DriverManager");
            connection = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/indian_bank", "root", "pass");
            statement = (Statement) connection.createStatement();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void showCustomerInformation() {
        try {
            String qry = "select * from user where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(qry);
            resultSet.next();
            String firstNameVar = resultSet.getString("first_name");
            String lastNameVar = resultSet.getString("last_name");
            String middleNameVar = resultSet.getString("middle_name");

            welcomeCustomerMessage.setText(" WELCOME " + firstNameVar.toUpperCase() + " " + middleNameVar.toUpperCase() + " " + lastNameVar.toUpperCase());

            firstName.setText(resultSet.getString("first_name"));
            lastName.setText(resultSet.getString("last_name"));
            middleName.setText(resultSet.getString("middle_name"));
            dob.setText(resultSet.getString("date_of_birth"));
            emailId.setText(resultSet.getString("email_id"));
            fatherName.setText(resultSet.getString("father_name"));
            motherName.setText(resultSet.getString("mother_name"));
            permanentAddress.setText(resultSet.getString("permanent_address"));
            residentialAddress.setText(resultSet.getString("residential_address"));
            gender.setText(resultSet.getString("gender"));

            loginTime.setText("Login Time : " + (new Date()));

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error In Connectivity" + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jInternalFrame3 = new javax.swing.JInternalFrame();
        welcomeMessage = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        welcomeCustomerMessage = new javax.swing.JLabel();
        accountInfo = new javax.swing.JButton();
        fundTransfer = new javax.swing.JButton();
        miniStatement = new javax.swing.JButton();
        fidDeposit = new javax.swing.JButton();
        personalInfo = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        personalInfoPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lastName = new javax.swing.JLabel();
        fatherName = new javax.swing.JLabel();
        motherName = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        middleName = new javax.swing.JLabel();
        firstName = new javax.swing.JLabel();
        emailId = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        dob = new javax.swing.JLabel();
        gender = new javax.swing.JLabel();
        permanentAddress = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        residentialAddress = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        accountInfoPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        accountNo = new javax.swing.JLabel();
        accountType = new javax.swing.JLabel();
        balance = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        accountType2 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        fixdepositbalance = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel41 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel57 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        accountNumber = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        reenterAccountNumber = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        accountHolderName = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        mpin = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        captcha = new javax.swing.JTextField();
        showCaptcha = new javax.swing.JLabel();
        addBenificary = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        amount = new javax.swing.JTextField();
        transferFundButton = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        captcha1 = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        mpin2 = new javax.swing.JTextField();
        showCaptcha1 = new javax.swing.JLabel();
        beneficiaryList = new javax.swing.JComboBox();
        ministatementpanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        allAccountList = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        servicePanel = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        serviceAccountList = new javax.swing.JComboBox();
        jLabel34 = new javax.swing.JLabel();
        pages = new javax.swing.JComboBox();
        chequeBookRequest = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        atmAccountList = new javax.swing.JComboBox();
        atmCardRequest = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel38 = new javax.swing.JLabel();
        creditCardRequest = new javax.swing.JButton();
        jLabel39 = new javax.swing.JLabel();
        loanRequest = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel40 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        fixDepositAmount = new javax.swing.JTextField();
        fixDepositButton = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        fixDepositmpin = new javax.swing.JTextField();
        fixDepositcaptcha = new javax.swing.JTextField();
        fixdepositshowcaptcha = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel30 = new javax.swing.JLabel();
        fixDepositList = new javax.swing.JComboBox();
        jLabel31 = new javax.swing.JLabel();
        redeemAmount = new javax.swing.JTextField();
        redeemMPIN = new javax.swing.JTextField();
        redeemCaptcha = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        redeemshowcaptcha = new javax.swing.JLabel();
        redeem = new javax.swing.JButton();
        period = new javax.swing.JComboBox();
        service = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        loginTime = new javax.swing.JLabel();
        logout = new javax.swing.JButton();

        jInternalFrame2.setVisible(true);

        jInternalFrame3.setVisible(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        welcomeMessage.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18));
        getContentPane().add(welcomeMessage);
        welcomeMessage.setBounds(160, 70, 130, 0);

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 48));
        jLabel3.setForeground(new java.awt.Color(102, 0, 102));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/20180922185904.png"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(400, 0, 620, 80);

        welcomeCustomerMessage.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18));
        welcomeCustomerMessage.setForeground(new java.awt.Color(102, 0, 0));
        welcomeCustomerMessage.setText("WELCOME ");
        getContentPane().add(welcomeCustomerMessage);
        welcomeCustomerMessage.setBounds(190, 90, 500, 21);

        accountInfo.setText("Account Info");
        accountInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountInfoActionPerformed(evt);
            }
        });
        getContentPane().add(accountInfo);
        accountInfo.setBounds(20, 200, 130, 70);

        fundTransfer.setText("Fund Transfer");
        fundTransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fundTransferActionPerformed(evt);
            }
        });
        getContentPane().add(fundTransfer);
        fundTransfer.setBounds(20, 300, 130, 70);

        miniStatement.setText("Mini Statement");
        miniStatement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miniStatementActionPerformed(evt);
            }
        });
        getContentPane().add(miniStatement);
        miniStatement.setBounds(20, 400, 130, 70);

        fidDeposit.setText("Fix Deposit");
        fidDeposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fidDepositActionPerformed(evt);
            }
        });
        getContentPane().add(fidDeposit);
        fidDeposit.setBounds(20, 590, 130, 70);

        personalInfo.setText("Personal Info");
        personalInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personalInfoActionPerformed(evt);
            }
        });
        getContentPane().add(personalInfo);
        personalInfo.setBounds(20, 120, 130, 70);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel1.setForeground(new java.awt.Color(102, 0, 51));
        jLabel1.setText("First Name");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel2.setForeground(new java.awt.Color(102, 0, 51));
        jLabel2.setText("Middle Name");
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel4.setForeground(new java.awt.Color(102, 0, 51));
        jLabel4.setText("Mother's Name");
        jLabel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lastName.setFont(new java.awt.Font("Tahoma", 0, 14));
        lastName.setForeground(new java.awt.Color(102, 0, 51));
        lastName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        fatherName.setFont(new java.awt.Font("Tahoma", 0, 14));
        fatherName.setForeground(new java.awt.Color(102, 0, 51));
        fatherName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        motherName.setFont(new java.awt.Font("Tahoma", 0, 14));
        motherName.setForeground(new java.awt.Color(102, 0, 51));
        motherName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel8.setForeground(new java.awt.Color(102, 0, 51));
        jLabel8.setText("Emaild Id");
        jLabel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel9.setForeground(new java.awt.Color(102, 0, 51));
        jLabel9.setText("Father's Name");
        jLabel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel10.setForeground(new java.awt.Color(102, 0, 51));
        jLabel10.setText("Last Name");
        jLabel10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        middleName.setFont(new java.awt.Font("Tahoma", 0, 14));
        middleName.setForeground(new java.awt.Color(102, 0, 51));
        middleName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        firstName.setFont(new java.awt.Font("Tahoma", 0, 14));
        firstName.setForeground(new java.awt.Color(102, 0, 51));
        firstName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        emailId.setFont(new java.awt.Font("Tahoma", 0, 14));
        emailId.setForeground(new java.awt.Color(102, 0, 51));
        emailId.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel14.setForeground(new java.awt.Color(102, 0, 51));
        jLabel14.setText("Date of Birth");
        jLabel14.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel15.setForeground(new java.awt.Color(102, 0, 51));
        jLabel15.setText("Gender");
        jLabel15.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel16.setForeground(new java.awt.Color(102, 0, 51));
        jLabel16.setText("Permanent Address");
        jLabel16.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        dob.setFont(new java.awt.Font("Tahoma", 0, 14));
        dob.setForeground(new java.awt.Color(102, 0, 51));
        dob.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        gender.setFont(new java.awt.Font("Tahoma", 0, 14));
        gender.setForeground(new java.awt.Color(102, 0, 51));
        gender.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        permanentAddress.setFont(new java.awt.Font("Tahoma", 0, 14));
        permanentAddress.setForeground(new java.awt.Color(102, 0, 51));
        permanentAddress.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel20.setForeground(new java.awt.Color(102, 0, 51));
        jLabel20.setText("Residential Address");
        jLabel20.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        residentialAddress.setFont(new java.awt.Font("Tahoma", 0, 14));
        residentialAddress.setForeground(new java.awt.Color(102, 0, 51));
        residentialAddress.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel56.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myprofile.jpeg"))); // NOI18N
        jLabel56.setText("jLabel56");

        javax.swing.GroupLayout personalInfoPanelLayout = new javax.swing.GroupLayout(personalInfoPanel);
        personalInfoPanel.setLayout(personalInfoPanelLayout);
        personalInfoPanelLayout.setHorizontalGroup(
            personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personalInfoPanelLayout.createSequentialGroup()
                        .addGroup(personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(permanentAddress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                            .addComponent(residentialAddress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(428, Short.MAX_VALUE))
                    .addGroup(personalInfoPanelLayout.createSequentialGroup()
                        .addGroup(personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(gender, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                            .addComponent(dob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emailId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(motherName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fatherName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(middleName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(firstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)
                        .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );
        personalInfoPanelLayout.setVerticalGroup(
            personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalInfoPanelLayout.createSequentialGroup()
                .addGroup(personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personalInfoPanelLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(middleName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fatherName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(personalInfoPanelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel56)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(motherName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailId, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(permanentAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(residentialAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(173, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Personal Info", personalInfoPanel);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel5.setForeground(new java.awt.Color(102, 0, 51));
        jLabel5.setText("Account No");
        jLabel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel6.setForeground(new java.awt.Color(102, 0, 51));
        jLabel6.setText("Account Type");
        jLabel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel7.setForeground(new java.awt.Color(102, 0, 51));
        jLabel7.setText("Balance");
        jLabel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        accountNo.setFont(new java.awt.Font("Tahoma", 0, 14));
        accountNo.setForeground(new java.awt.Color(102, 0, 51));
        accountNo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        accountType.setFont(new java.awt.Font("Tahoma", 0, 14));
        accountType.setForeground(new java.awt.Color(102, 0, 51));
        accountType.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        balance.setFont(new java.awt.Font("Tahoma", 0, 14));
        balance.setForeground(new java.awt.Color(102, 0, 51));
        balance.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel23.setForeground(new java.awt.Color(102, 0, 51));
        jLabel23.setText("Account Type");
        jLabel23.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        accountType2.setFont(new java.awt.Font("Tahoma", 0, 14));
        accountType2.setForeground(new java.awt.Color(102, 0, 51));
        accountType2.setText("FIX DEPOSIT");
        accountType2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel24.setForeground(new java.awt.Color(102, 0, 51));
        jLabel24.setText("Balance");
        jLabel24.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        fixdepositbalance.setFont(new java.awt.Font("Tahoma", 0, 14));
        fixdepositbalance.setForeground(new java.awt.Color(102, 0, 51));
        fixdepositbalance.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/accountinfo.png"))); // NOI18N
        jLabel41.setText("jLabel41");

        javax.swing.GroupLayout accountInfoPanelLayout = new javax.swing.GroupLayout(accountInfoPanel);
        accountInfoPanel.setLayout(accountInfoPanelLayout);
        accountInfoPanelLayout.setHorizontalGroup(
            accountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(accountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(accountInfoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(accountType, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(accountInfoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(accountInfoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(accountNo, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(accountInfoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(accountType2, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(accountInfoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(fixdepositbalance, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 353, Short.MAX_VALUE)
                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        accountInfoPanelLayout.setVerticalGroup(
            accountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountInfoPanelLayout.createSequentialGroup()
                .addGroup(accountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(accountInfoPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(accountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(accountNo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(accountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(accountType, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(accountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(accountInfoPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(accountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accountType2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(accountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fixdepositbalance, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(214, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Account Info", accountInfoPanel);

        jLabel57.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fund.png"))); // NOI18N
        jLabel57.setText("jLabel57");

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel42.setBackground(new java.awt.Color(204, 204, 204));
        jLabel42.setText("                                                               Add Benificiary");
        jLabel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setText("Account Number");

        accountNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountNumberActionPerformed(evt);
            }
        });

        jLabel12.setText("Re-enter Account Number");

        reenterAccountNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reenterAccountNumberActionPerformed(evt);
            }
        });

        jLabel17.setText("Account Holder Name");

        jLabel18.setText("MPIN");

        jLabel19.setText("Captcha");

        showCaptcha.setText("captcha");

        addBenificary.setText("Add Benificiary");
        addBenificary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBenificaryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(accountNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                                    .addComponent(reenterAccountNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                                    .addComponent(accountHolderName, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                                    .addComponent(mpin, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(captcha, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 251, Short.MAX_VALUE)
                                        .addComponent(showCaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(addBenificary, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(217, 217, 217))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reenterAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accountHolderName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mpin, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(captcha, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showCaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addBenificary, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel43.setBackground(new java.awt.Color(204, 204, 204));
        jLabel43.setText("                                                                Fund Transfer");
        jLabel43.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel13.setText("Beneficary");

        transferFundButton.setText("Transfer Fund");
        transferFundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferFundButtonActionPerformed(evt);
            }
        });

        jLabel44.setText("MPIN");

        jLabel45.setText("Amount to transfer");

        jLabel46.setText("Captcha");

        showCaptcha1.setText("captcha");

        beneficiaryList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        beneficiaryList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beneficiaryListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(amount, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                                        .addComponent(mpin2, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                            .addComponent(beneficiaryList, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 5, Short.MAX_VALUE)))))
                            .addContainerGap())
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(44, 44, 44)
                            .addComponent(captcha1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 195, Short.MAX_VALUE)
                            .addComponent(showCaptcha1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(transferFundButton, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(220, 220, 220))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(beneficiaryList, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mpin2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(captcha1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showCaptcha1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(transferFundButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(237, 237, 237)
                .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(163, 163, 163))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel57)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Fund Transfer", jPanel4);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        allAccountList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        allAccountList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allAccountListActionPerformed(evt);
            }
        });

        jLabel21.setText("Account Number");

        jLabel58.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mini.png"))); // NOI18N
        jLabel58.setText("jLabel58");

        javax.swing.GroupLayout ministatementpanelLayout = new javax.swing.GroupLayout(ministatementpanel);
        ministatementpanel.setLayout(ministatementpanelLayout);
        ministatementpanelLayout.setHorizontalGroup(
            ministatementpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ministatementpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ministatementpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ministatementpanelLayout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(allAccountList, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 885, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        ministatementpanelLayout.setVerticalGroup(
            ministatementpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ministatementpanelLayout.createSequentialGroup()
                .addGroup(ministatementpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ministatementpanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel58))
                    .addGroup(ministatementpanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(ministatementpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(allAccountList, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Mini Statement", ministatementpanel);

        jLabel25.setText("Account Number");

        serviceAccountList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        serviceAccountList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceAccountListActionPerformed(evt);
            }
        });

        jLabel34.setText("No of pages");

        pages.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        pages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagesActionPerformed(evt);
            }
        });

        chequeBookRequest.setText("Request");
        chequeBookRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chequeBookRequestActionPerformed(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel35.setText("Cheque Book Request");
        jLabel35.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel36.setText("ATM Card Request");
        jLabel36.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel37.setText("Account Number");

        atmAccountList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        atmAccountList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atmAccountListActionPerformed(evt);
            }
        });

        atmCardRequest.setText("Request");
        atmCardRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atmCardRequestActionPerformed(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel38.setText("Apply Credit Card ");
        jLabel38.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        creditCardRequest.setText("Apply");
        creditCardRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditCardRequestActionPerformed(evt);
            }
        });

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel39.setText("Apply Loan");
        jLabel39.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        loanRequest.setText("Apply");
        loanRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loanRequestActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel40.setText("----------------------------------Service Request List--------------------------------- ");
        jLabel40.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout servicePanelLayout = new javax.swing.GroupLayout(servicePanel);
        servicePanel.setLayout(servicePanelLayout);
        servicePanelLayout.setHorizontalGroup(
            servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(servicePanelLayout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(chequeBookRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(819, Short.MAX_VALUE))
            .addGroup(servicePanelLayout.createSequentialGroup()
                .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(servicePanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE))
                    .addGroup(servicePanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(servicePanelLayout.createSequentialGroup()
                                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pages, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(servicePanelLayout.createSequentialGroup()
                                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(serviceAccountList, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jSeparator7, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                                .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, servicePanelLayout.createSequentialGroup()
                                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(atmAccountList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(servicePanelLayout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(atmCardRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(servicePanelLayout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(creditCardRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(servicePanelLayout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, servicePanelLayout.createSequentialGroup()
                                .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                                .addGap(42, 42, 42))
                            .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                            .addGroup(servicePanelLayout.createSequentialGroup()
                                .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                                    .addComponent(jLabel40, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 437, Short.MAX_VALUE))
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, servicePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 283, Short.MAX_VALUE)
                        .addComponent(loanRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(163, 163, 163))))
        );
        servicePanelLayout.setVerticalGroup(
            servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(servicePanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serviceAccountList, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pages, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loanRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chequeBookRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(servicePanelLayout.createSequentialGroup()
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(atmAccountList, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(atmCardRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(creditCardRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(servicePanelLayout.createSequentialGroup()
                        .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Service", servicePanel);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel22.setForeground(new java.awt.Color(102, 0, 51));
        jLabel22.setText("------------------------------------------------------------Fix Deposit Account Details------------------------------------------------");
        jLabel22.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        fixDepositAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fixDepositAmountActionPerformed(evt);
            }
        });

        fixDepositButton.setText("Fix Deposit");
        fixDepositButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fixDepositButtonActionPerformed(evt);
            }
        });

        jLabel26.setText("Fix Deposit Amount");

        jLabel27.setText("Period ( Year )");

        jLabel28.setText("MPIN");

        jLabel29.setText("Captcha");

        fixDepositmpin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fixDepositmpinActionPerformed(evt);
            }
        });

        fixDepositcaptcha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fixDepositcaptchaActionPerformed(evt);
            }
        });

        fixdepositshowcaptcha.setText("Captcha");

        jLabel30.setText("Fix Deposit");

        fixDepositList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        fixDepositList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fixDepositListActionPerformed(evt);
            }
        });

        jLabel31.setText("Amount");

        redeemAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redeemAmountActionPerformed(evt);
            }
        });

        redeemMPIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redeemMPINActionPerformed(evt);
            }
        });

        redeemCaptcha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redeemCaptchaActionPerformed(evt);
            }
        });

        jLabel32.setText("MPIN");

        jLabel33.setText("Captcha");

        redeemshowcaptcha.setText("Captcha");

        redeem.setText("Redeem Fix Deposit");
        redeem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redeemActionPerformed(evt);
            }
        });

        period.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        period.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                periodActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fixDepositButton, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(period, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(fixDepositmpin, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                            .addComponent(fixDepositAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(fixDepositcaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(fixdepositshowcaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(redeemMPIN, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(redeemAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(redeemCaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(35, 35, 35)
                                        .addComponent(redeemshowcaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fixDepositList, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(redeem, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fixDepositAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(period, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fixDepositmpin, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fixDepositcaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fixdepositshowcaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(fixDepositButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fixDepositList, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(redeemAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(redeemMPIN, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(redeemCaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(redeemshowcaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(redeem, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Fix Deposit", jPanel2);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(180, 110, 1160, 560);

        service.setText("Service");
        service.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceActionPerformed(evt);
            }
        });
        getContentPane().add(service);
        service.setBounds(20, 490, 130, 70);

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel54.setIcon(new javax.swing.ImageIcon(getClass().getResource("/footer.png"))); // NOI18N
        jLabel54.setText("jLabel17");

        jLabel55.setText("Designed and Developed by : Firdosh Ansari ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 1115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(485, Short.MAX_VALUE)
                .addComponent(jLabel55)
                .addGap(416, 416, 416))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel54)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel55)
                .addGap(0, 19, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5);
        jPanel5.setBounds(120, 670, 1120, 110);
        getContentPane().add(loginTime);
        loginTime.setBounds(1030, 10, 320, 20);

        logout.setText("LOG OUT");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        getContentPane().add(logout);
        logout.setBounds(1196, 80, 110, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void personalInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personalInfoActionPerformed

        // TODO add your handling code here:
        try {
            jTabbedPane1.setSelectedIndex(0);
            String qry = "select * from user where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(qry);
            if (resultSet.next())
            {
                firstName.setText(resultSet.getString("first_name"));
                lastName.setText(resultSet.getString("last_name"));
                middleName.setText(resultSet.getString("middle_name"));
                dob.setText(resultSet.getString("date_of_birth"));
                emailId.setText(resultSet.getString("email_id"));
                fatherName.setText(resultSet.getString("father_name"));
                motherName.setText(resultSet.getString("mother_name"));
                permanentAddress.setText(resultSet.getString("permanent_address"));
                residentialAddress.setText(resultSet.getString("residential_address "));
                gender.setText(resultSet.getString("gender"));
            } else {
                JOptionPane.showMessageDialog(null, "Some Technical error occured!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Some Technical error occured!");
        }
    }//GEN-LAST:event_personalInfoActionPerformed

    private void accountInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountInfoActionPerformed
        // TODO add your handling code here:
        try {
            jTabbedPane1.setSelectedIndex(1);
            String qry = "select * from account where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(qry);
            resultSet.next();
            accountNo.setText(resultSet.getString("account_no"));
            accountType.setText(resultSet.getString("account_type"));
            balance.setText("₹ " + resultSet.getString("balance"));

            qry = "select sum(balance) as balance from fix_deposit where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(qry);
            resultSet.next();
            fixdepositbalance.setText("₹ " + resultSet.getString("balance"));

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error In Connectivity" + ex.getMessage());
        }
    }//GEN-LAST:event_accountInfoActionPerformed

    private void fundTransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fundTransferActionPerformed
        try {
            jTabbedPane1.setSelectedIndex(2);
            showCaptcha.setText(UUID.randomUUID().toString().split("-")[0]);
            String firstqry = "select * from beneficiary_detail where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(firstqry);
            ArrayList beneficiary = new ArrayList();
            while (resultSet.next()) {
                beneficiary.add(resultSet.getString("beneficiary_id"));
            }
            beneficiaryList.setModel(new javax.swing.DefaultComboBoxModel(beneficiary.toArray()));
            allAccountList.setSelectedIndex(0);
            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_fundTransferActionPerformed

    private void miniStatementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miniStatementActionPerformed
        try {
            jTabbedPane1.setSelectedIndex(3);

            String firstqry = "select account_no,balance,maturity_amount,period from fix_deposit where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(firstqry);

            ArrayList accountList = new ArrayList();
            while (resultSet.next()) {
                accountList.add(resultSet.getString("account_no"));
            }

            firstqry = "select * from account where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(firstqry);
            String saving = "";
            while (resultSet.next()) {
                accountList.add(resultSet.getString("account_no"));
                saving = resultSet.getString("account_no");
            }

            allAccountList.setModel(new javax.swing.DefaultComboBoxModel(accountList.toArray()));
            allAccountList.setSelectedItem(saving);
            String qry = "select id,txn_type,txn_status,txn_message,txn_amount,running_balance from transaction where account_no='" + allAccountList.getSelectedItem() + "' order by id desc ;";
            resultSet = statement.executeQuery(qry);
            jTable1.setModel(DbUtils.resultSetToTableModel(resultSet));

            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_miniStatementActionPerformed

    private void fidDepositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fidDepositActionPerformed
        // TODO add your handling code here:
       
        jTabbedPane1.setSelectedIndex(5);
        fixdepositshowcaptcha.setText(UUID.randomUUID().toString().split("-")[0]);
        redeemshowcaptcha.setText(UUID.randomUUID().toString().split("-")[0]);

        try {
            String firstqry = "select account_no,balance,maturity_amount,period from fix_deposit where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(firstqry);

            ArrayList accountList = new ArrayList();
            while (resultSet.next()) {
                accountList.add(resultSet.getString("account_no"));
            }
            fixDepositList.setModel(new javax.swing.DefaultComboBoxModel(accountList.toArray()));
            period.setModel(new javax.swing.DefaultComboBoxModel(Arrays.asList("1", "2", "4", "5", "6", "7", "8", "9", "10").toArray()));
            resultSet = statement.executeQuery(firstqry);
            jTable2.setModel(DbUtils.resultSetToTableModel(resultSet));
            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_fidDepositActionPerformed

    private void serviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(4);
        fixdepositshowcaptcha.setText(UUID.randomUUID().toString().split("-")[0]);
        redeemshowcaptcha.setText(UUID.randomUUID().toString().split("-")[0]);

        try {
            String firstqry = "select account_no from account where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(firstqry);

            ArrayList accountList = new ArrayList();
            while (resultSet.next()) {
                accountList.add(resultSet.getString("account_no"));
            }
            atmAccountList.setModel(new javax.swing.DefaultComboBoxModel(accountList.toArray()));
            serviceAccountList.setModel(new javax.swing.DefaultComboBoxModel(accountList.toArray()));
            pages.setModel(new javax.swing.DefaultComboBoxModel(Arrays.asList("20", "30", "50").toArray()));

            firstqry = "select id,request_type,status from service_request where customer_id='" + customerId + "' order by id desc;";
            resultSet = statement.executeQuery(firstqry);
            jTable3.setModel(DbUtils.resultSetToTableModel(resultSet));
            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_serviceActionPerformed

    private void periodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_periodActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_periodActionPerformed

    private void redeemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redeemActionPerformed
        // TODO add your handling code here:

        String redeemCaptchaVar = redeemCaptcha.getText();
        String redeemMPINVar = redeemMPIN.getText();
        String redeemshowcaptchaVar = redeemshowcaptcha.getText();

        if (redeemCaptchaVar == null || redeemCaptchaVar.isEmpty()
                || redeemMPINVar == null || redeemMPINVar.isEmpty()
                || redeemAmount.getText() == null || redeemAmount.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill all fields properly.");
            return;
        }

        BigDecimal redeemAmountVar = new BigDecimal(0.0);
        try {
            redeemAmountVar = new BigDecimal(redeemAmount.getText());
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Please provide a valid fix deposit amount.");
            return;
        }

        if (redeemAmountVar.compareTo(new BigDecimal(0.0)) <= 0) {
            JOptionPane.showMessageDialog(null, "Please provide a valid fix deposit amount greater than 0");
            return;
        }

        try {
            String fixDepositAccountNo = (String) fixDepositList.getSelectedItem();
            String firstqry = "select * from fix_deposit where account_no='" + fixDepositAccountNo + "';";
            resultSet = statement.executeQuery(firstqry);
            BigDecimal fixDepositBalance = new BigDecimal(0.0);
            BigDecimal fixDepositPeriodVar = new BigDecimal("1");
            if (resultSet.next()) {
                fixDepositBalance = new BigDecimal(resultSet.getString("balance"));
                fixDepositPeriodVar = new BigDecimal(resultSet.getString("period"));
            } else {
                JOptionPane.showMessageDialog(null, "Your account doesnot exists.");
                return;
            }

            if (fixDepositBalance.compareTo(redeemAmountVar) < 0) {
                JOptionPane.showMessageDialog(null, "You don't have sufficient fix deposit balance to redeem.");
                return;
            }

            if (!redeemshowcaptcha.getText().equals(redeemCaptcha.getText())) {
                JOptionPane.showMessageDialog(null, "Captcha Mismatch");
                return;
            }

            String qry = "select * from authentication where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(qry);
            String mpin = "";
            if (resultSet.next()) {
                mpin = resultSet.getString("mpin");
            }

            if (!mpin.equals(redeemMPINVar)) {
                JOptionPane.showMessageDialog(null, "PLease enter correct mpin.");
                return;
            }

            BigDecimal remainingBalance = fixDepositBalance.subtract(redeemAmountVar);

            BigDecimal maturityAmount = new BigDecimal(0.0);
            BigDecimal rate = new BigDecimal(7.5);
            maturityAmount = remainingBalance.multiply(rate).multiply(fixDepositPeriodVar).divide(new BigDecimal(100));
            maturityAmount = maturityAmount.add(remainingBalance);

            firstqry = "select * from account where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(firstqry);
            String savingAccountNo = "";
            BigDecimal savingAccountBalance = new BigDecimal(0.0);
            if (resultSet.next()) {
                savingAccountNo = resultSet.getString("account_no");
                resultSet.getString("account_type");
                savingAccountBalance = new BigDecimal(resultSet.getString("balance"));
            } else {
                JOptionPane.showMessageDialog(null, "Your account doesnot exists.");
                return;
            }

            savingAccountBalance = savingAccountBalance.add(redeemAmountVar);
            String firstUpateQry = "update account set balance= '" + savingAccountBalance + "' where account_no='" + savingAccountNo + "';";
            statement.executeUpdate(firstUpateQry);

            firstUpateQry = "update fix_deposit set balance= '" + remainingBalance + "' , maturity_amount= '" + maturityAmount + "' where account_no='" + fixDepositAccountNo + "';";
            statement.executeUpdate(firstUpateQry);

            String referenceNo = UUID.randomUUID().toString();
            String debitQuery = "Insert into transaction (reference_id,account_no,txn_type,running_balance,txn_amount,txn_Status,second_party,txn_message) "
                    + "values('" + referenceNo + "','" + fixDepositAccountNo + "','" + "DEBIT" + "','" + remainingBalance + "','" + redeemAmountVar + "','" + "SUCCESS" + "','" + savingAccountNo + "','" + "FIX DEPOSIT Redeemed" + "');";
            statement.executeUpdate(debitQuery);

            String creditQuery = "Insert into transaction (reference_id,account_no,txn_type,running_balance,txn_amount,txn_Status,second_party,txn_message) "
                    + "values('" + referenceNo + "','" + savingAccountNo + "','" + "CREDIT" + "','" + savingAccountBalance + "','" + redeemAmountVar + "','" + "SUCCESS" + "','" + fixDepositAccountNo + "','" + "Fix deposit redeemed from : " + fixDepositAccountNo + "');";
            statement.executeUpdate(creditQuery);

            firstqry = "select account_no,balance,maturity_amount,period from fix_deposit where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(firstqry);
            jTable2.setModel(DbUtils.resultSetToTableModel(resultSet));

            JOptionPane.showMessageDialog(null, "Fix deposit of amount Rs " + redeemAmountVar + " redeemed successfully");

            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_redeemActionPerformed

    private void redeemCaptchaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redeemCaptchaActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_redeemCaptchaActionPerformed

    private void redeemMPINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redeemMPINActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_redeemMPINActionPerformed

    private void redeemAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redeemAmountActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_redeemAmountActionPerformed

    private void fixDepositListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fixDepositListActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_fixDepositListActionPerformed

    private void fixDepositcaptchaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fixDepositcaptchaActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_fixDepositcaptchaActionPerformed

    private void fixDepositmpinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fixDepositmpinActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_fixDepositmpinActionPerformed

    private void fixDepositButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fixDepositButtonActionPerformed
        try {
            // TODO add your handling code here:

            if (fixDepositAmount.getText() == null || fixDepositAmount.getText().isEmpty()
                    || fixDepositmpin.getText() == null || fixDepositmpin.getText().isEmpty()
                    || fixDepositcaptcha.getText() == null || fixDepositcaptcha.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please fill all fields properly.");
                return;
            }
            BigDecimal fixDepositAmountVar = new BigDecimal(0.0);
            try {
                fixDepositAmountVar = new BigDecimal(fixDepositAmount.getText());
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "Please provide a valid fix deposit amount.");
                return;
            }

            if (fixDepositAmountVar.compareTo(new BigDecimal(0.0)) <= 0) {
                JOptionPane.showMessageDialog(null, "Please provide a valid fix deposit amount gretaer than 0");
                return;
            }

            BigDecimal fixDepositPeriodVar = new BigDecimal((String) period.getSelectedItem());
            BigDecimal maturityAmount = new BigDecimal(0.0);
            BigDecimal rate = new BigDecimal(7.5);
            maturityAmount = fixDepositAmountVar.multiply(rate).multiply(fixDepositPeriodVar).divide(new BigDecimal(100));
            maturityAmount = maturityAmount.add(fixDepositAmountVar);

            String firstqry = "select * from account where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(firstqry);
            String savingAccountNo = "";
            BigDecimal savingAccountBalance = new BigDecimal(0.0);
            if (resultSet.next()) {
                savingAccountNo = resultSet.getString("account_no");
                resultSet.getString("account_type");
                savingAccountBalance = new BigDecimal(resultSet.getString("balance"));
            } else {
                JOptionPane.showMessageDialog(null, "Your account doesnot exists.");
                return;
            }

            if (savingAccountBalance.compareTo(fixDepositAmountVar) < 0) {
                JOptionPane.showMessageDialog(null, "You don't have sufficient balance to fix deposit.");
                return;
            }

            if (!fixdepositshowcaptcha.getText().equals(fixDepositcaptcha.getText())) {
                JOptionPane.showMessageDialog(null, "Captcha Mismatch");
                return;
            }

            String qry = "select * from authentication where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(qry);
            String mpin = "";
            if (resultSet.next()) {
                mpin = resultSet.getString("mpin");
            }

            if (!mpin.equals(fixDepositmpin.getText())) {
                JOptionPane.showMessageDialog(null, "PLease enter correct mpin.");
                return;
            }

            savingAccountBalance = savingAccountBalance.subtract(fixDepositAmountVar);
            String firstUpateQry = "update account set balance= '" + savingAccountBalance + "' where account_no='" + savingAccountNo + "';";
            statement.executeUpdate(firstUpateQry);

            String fixDepositAccountNumber = "IND-BANK-FIX-DEPOSIT-" + System.currentTimeMillis();
            String accountQuery = "Insert into fix_deposit values('" + customerId + "','" + fixDepositAccountNumber + "','" + "FIX-DEPOSIT" + "','" + fixDepositAmountVar + "','" + maturityAmount + "','" + fixDepositPeriodVar + "');";
            statement.executeUpdate(accountQuery);

            String referenceNo = UUID.randomUUID().toString();
            String debitQuery = "Insert into transaction (reference_id,account_no,txn_type,running_balance,txn_amount,txn_Status,second_party,txn_message) "
                    + "values('" + referenceNo + "','" + savingAccountNo + "','" + "DEBIT" + "','" + savingAccountBalance + "','" + fixDepositAmountVar + "','" + "SUCCESS" + "','" + fixDepositAccountNumber + "','" + "Fund transfer for FIX DEPOSIT : " + fixDepositAccountNumber + "');";
            statement.executeUpdate(debitQuery);

            String creditQuery = "Insert into transaction (reference_id,account_no,txn_type,running_balance,txn_amount,txn_Status,second_party,txn_message) "
                    + "values('" + referenceNo + "','" + fixDepositAccountNumber + "','" + "CREDIT" + "','" + fixDepositAmountVar + "','" + fixDepositAmountVar + "','" + "SUCCESS" + "','" + savingAccountNo + "','" + "Fix deposit " + "');";
            statement.executeUpdate(creditQuery);

            firstqry = "select account_no,balance,maturity_amount,period from fix_deposit where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(firstqry);
            jTable2.setModel(DbUtils.resultSetToTableModel(resultSet));

            JOptionPane.showMessageDialog(null, "Fix deposit of amount Rs " + fixDepositAmountVar + " successfully created");

        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_fixDepositButtonActionPerformed

    private void fixDepositAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fixDepositAmountActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_fixDepositAmountActionPerformed

    private void loanRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loanRequestActionPerformed
        // TODO add your handling code here:

        try {
            // TODO add your handling code here:
            String firstqry = "Insert into service_request (request_type,status,customer_id) values('" + "LOAN_REQUEST" + "','" + "PENDING" + "','" + customerId + "');";
            statement.executeUpdate(firstqry);

            firstqry = "select id,request_type,status from service_request where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(firstqry);
            jTable3.setModel(DbUtils.resultSetToTableModel(resultSet));

            JOptionPane.showMessageDialog(null, "Request submitted, our customer care executive will contact you within 24 hours.");

        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loanRequestActionPerformed

    private void creditCardRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditCardRequestActionPerformed
        // TODO add your handling code here:

        
            // TODO add your handling code here:
            try{
            String firstqry = "Insert into service_request (request_type,status,customer_id) values('" + "CREDIT_CARD_REQUEST" + "','" + "PENDING" + "','" + customerId + "');";
            statement.executeUpdate(firstqry);

            firstqry = "select id,request_type,status from service_request where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(firstqry);
            jTable3.setModel(DbUtils.resultSetToTableModel(resultSet));

            JOptionPane.showMessageDialog(null, "Request submitted, our customer care executive will contact you within 24 hours.");

        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_creditCardRequestActionPerformed

    private void atmCardRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atmCardRequestActionPerformed
        // TODO add your handling code here:

        try {

            String firstqry = "Insert into service_request (request_type,status,customer_id) values('" + "ATM_CARD_REQUEST" + "','" + "PENDING" + "','" + customerId + "');";
            statement.executeUpdate(firstqry);

            firstqry = "select id,request_type,status from service_request where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(firstqry);
            jTable3.setModel(DbUtils.resultSetToTableModel(resultSet));

            JOptionPane.showMessageDialog(null, "Request submitted, ATM card will be delivered to your address within 10 working days.");

        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_atmCardRequestActionPerformed

    private void atmAccountListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atmAccountListActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_atmAccountListActionPerformed

    private void chequeBookRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chequeBookRequestActionPerformed
        // TODO add your handling code here:
        String accountNo = (String) serviceAccountList.getSelectedItem();

        try {

            String firstqry = "Insert into service_request (request_type,status,customer_id) values('" + "CHEQUE_BOOK_REQUEST" + "','" + "PENDING" + "','" + customerId + "');";
            statement.executeUpdate(firstqry);

            firstqry = "select id,request_type,status from service_request where customer_id='" + customerId + "';";
            resultSet = statement.executeQuery(firstqry);
            jTable3.setModel(DbUtils.resultSetToTableModel(resultSet));

            JOptionPane.showMessageDialog(null, "Request submitted, Cheque book will be delivered to your address within 10 working days.");

        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_chequeBookRequestActionPerformed

    private void pagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagesActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_pagesActionPerformed

    private void serviceAccountListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceAccountListActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_serviceAccountListActionPerformed

    private void allAccountListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allAccountListActionPerformed
        try {
            // TODO add your handling code here:
            String qry = "select id,txn_type,txn_status ,txn_message,txn_amount,running_balance from transaction where account_no='" + allAccountList.getSelectedItem() + "' order by id desc ;";
            resultSet = statement.executeQuery(qry);
            jTable1.setModel(DbUtils.resultSetToTableModel(resultSet));
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_allAccountListActionPerformed

    private void accountNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountNumberActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_accountNumberActionPerformed

    private void transferFundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferFundButtonActionPerformed
        // TODO add your handling code here:
        try {
            String showCaptchaVar = showCaptcha1.getText();
            String captchaVar = captcha1.getText();
            String mpinVar = mpin2.getText();
            BigDecimal amountVar = new BigDecimal("0.0");
            if (amount.getText() == null || amount.getText().isEmpty()
                    || showCaptchaVar == null || showCaptchaVar.isEmpty()
                    || captchaVar == null || captchaVar.isEmpty()
                    || mpinVar == null || mpinVar.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please fill all the fields properly.");
                return;
            }

            try {
                amountVar = new BigDecimal(amount.getText());
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "Please fill valid amount.");
                return;
            }

            if (amountVar.compareTo(new BigDecimal("0.0")) <= 0) {
                JOptionPane.showMessageDialog(null, "Amount should be greater than 0.)");
                return;
            }

            String firstAccountNo = "";
            String secondAccountNo = "";

            BigDecimal firstBalance = new BigDecimal(0.0);
            BigDecimal secondBalance = new BigDecimal(0.0);

            if (!showCaptchaVar.equals(captchaVar)) {
                JOptionPane.showMessageDialog(null, "Captcha Mismatch");
                return;
            }

            String beneficiaryId = (String) beneficiaryList.getSelectedItem();

            String beneficiaryQry = "select * from beneficiary_detail where beneficiary_id='" + beneficiaryId + "';";
            resultSet = statement.executeQuery(beneficiaryQry);
            String accountNumberVar = "";
            
            if (resultSet.next()) {
                accountNumberVar = resultSet.getString("beneficiary_account_no");
            }else{
                JOptionPane.showMessageDialog(null, "Beneficiary details does not exists.");
                return;
            }

            String qry = "select * from account where account_no='" + accountNumberVar + "';";
            resultSet = statement.executeQuery(qry);
            if (resultSet.next()) {
                secondAccountNo = resultSet.getString("account_no");
                resultSet.getString("account_type");
                secondBalance = new BigDecimal(resultSet.getString("balance"));

                String firstqry = "select * from account where customer_id='" + customerId + "';";
                resultSet = statement.executeQuery(firstqry);

                if (resultSet.next()) {
                    firstAccountNo = resultSet.getString("account_no");
                    resultSet.getString("account_type");
                    firstBalance = new BigDecimal(resultSet.getString("balance"));
                } else {
                    JOptionPane.showMessageDialog(null, "Your account doesnot exists.");
                    return;
                }

                if (firstBalance.compareTo(amountVar) < 0) {
                    JOptionPane.showMessageDialog(null, "You don't have sufficient balance to transfer money.");
                    return;
                }

                statement = (Statement) connection.createStatement();
                qry = "select * from authentication where customer_id='" + customerId + "';";
                resultSet = statement.executeQuery(qry);
                String mpin = "";
                if (resultSet.next()) {
                    mpin = resultSet.getString("mpin");
                }

                if (!mpin.equals(mpinVar)) {
                    JOptionPane.showMessageDialog(null, "PLease enter correct mpin.");
                    return;
                }

                firstBalance = firstBalance.subtract(amountVar);
                secondBalance = secondBalance.add(amountVar);

                String firstUpateQry = "update account set balance= '" + firstBalance + "' where account_no='" + firstAccountNo + "';";
                statement.executeUpdate(firstUpateQry);

                String seconUpateQry = "update account set balance= '" + secondBalance + "' where account_no='" + secondAccountNo + "';";
                statement.executeUpdate(seconUpateQry);

                String referenceNo = UUID.randomUUID().toString();
                String debitQuery = "Insert into transaction (reference_id,account_no,txn_type,running_balance,txn_amount,txn_Status,second_party,txn_message) values('" + referenceNo + "','" + firstAccountNo + "','" + "DEBIT" + "','" + firstBalance + "','" + amountVar + "','" + "SUCCESS" + "','" + secondAccountNo + "','" + "Fund transfer to " + secondAccountNo + "');";
                statement.executeUpdate(debitQuery);

                String creditQuery = "Insert into transaction (reference_id,account_no,txn_type,running_balance,txn_amount,txn_Status,second_party,txn_message) values('" + referenceNo + "','" + secondAccountNo + "','" + "CREDIT" + "','" + secondBalance + "','" + amountVar + "','" + "SUCCESS" + "','" + firstAccountNo + "','" + "Fund recevied from " + firstAccountNo + "');";
                statement.executeUpdate(creditQuery);

                JOptionPane.showMessageDialog(null, "Amount Rs " + amountVar + " successfully transfered to " + beneficiaryId);

            } else {
                JOptionPane.showMessageDialog(null, "SecondParty account doesnot exists.");
                return;
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error In Connectivity" + ex.getMessage());
        }
}//GEN-LAST:event_transferFundButtonActionPerformed

    private void reenterAccountNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reenterAccountNumberActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_reenterAccountNumberActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        customerId = "";
        Login login = new Login();
        login.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_logoutActionPerformed

    private void addBenificaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBenificaryActionPerformed
        // TODO add your handling code here:

        try {
            String accountNumberVar = accountNumber.getText();
            String reenterAccountNumberVar = reenterAccountNumber.getText();
            String accountHolderNameVar = accountHolderName.getText();
            String showCaptchaVar = showCaptcha.getText();
            String captchaVar = captcha.getText();
            String mpinVar = mpin.getText();
            if (accountNumberVar == null || accountNumberVar.isEmpty()
                    || reenterAccountNumberVar == null || reenterAccountNumberVar.isEmpty()
                    || accountHolderNameVar == null || accountHolderNameVar.isEmpty()
                    || showCaptchaVar == null || showCaptchaVar.isEmpty()
                    || captchaVar == null || captchaVar.isEmpty()
                    || mpinVar == null || mpinVar.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please fill all the fields properly.");
                return;
            }

            String firstAccountNo = "";
            String secondAccountNo = "";

            if (!accountNumberVar.equals(reenterAccountNumberVar)) {
                JOptionPane.showMessageDialog(null, "Account Number Mismatch, Please re-check.");
                return;
            }

            if (!showCaptchaVar.equals(captchaVar)) {
                JOptionPane.showMessageDialog(null, "Captcha Mismatch");
                return;
            }

            String qry = "select * from account where account_no='" + accountNumberVar + "';";
            resultSet = statement.executeQuery(qry);
            if (resultSet.next()) {
                secondAccountNo = resultSet.getString("account_no");
                resultSet.getString("account_type");
                String beneficaryCustomerId = resultSet.getString("customer_id");
                String userQry = "select * from user where customer_id='" + resultSet.getString("customer_id") + "';";
                resultSet = statement.executeQuery(userQry);
                resultSet.next();
                String firstNameVar = resultSet.getString("first_name");
                String lastNameVar = resultSet.getString("last_name");
                String middleNameVar = resultSet.getString("middle_name");

                String name = firstNameVar + " " + middleNameVar + " " + lastNameVar;

                if (!name.equals(accountHolderNameVar)) {
                    JOptionPane.showMessageDialog(null, "Account Holder Name Mismatch");
                    return;
                }

                String firstqry = "select * from account where customer_id='" + customerId + "';";
                resultSet = statement.executeQuery(firstqry);

                if (resultSet.next()) {
                    firstAccountNo = resultSet.getString("account_no");
                    resultSet.getString("account_type");
                } else {
                    JOptionPane.showMessageDialog(null, "Your account doesnot exists.");
                    return;
                }

                statement = (Statement) connection.createStatement();
                qry = "select * from authentication where customer_id='" + customerId + "';";
                resultSet = statement.executeQuery(qry);
                String mpin = "";
                if (resultSet.next()) {
                    mpin = resultSet.getString("mpin");
                }

                if (!mpin.equals(mpinVar)) {
                    JOptionPane.showMessageDialog(null, "PLease enter correct mpin.");
                    return;
                }

                String beneficiaryId = "IND-BANK-BEN-" + name + "-" + accountNumberVar;

                firstqry = "select * from beneficiary_detail where customer_id='" + customerId + "' and beneficiary_account_no='" + accountNumberVar + "';";
                resultSet = statement.executeQuery(firstqry);

                if (resultSet.next()) {
                    JOptionPane.showMessageDialog(null, "Beneficairy already exists.");
                    return;
                }

                String creditQuery = "Insert into beneficiary_detail values('" + customerId + "','" + beneficaryCustomerId + "','" + accountNumberVar + "','" + beneficiaryId + "');";
                statement.executeUpdate(creditQuery);

                firstqry = "select * from beneficiary_detail where customer_id='" + customerId + "';";
                resultSet = statement.executeQuery(firstqry);
                ArrayList beneficiary = new ArrayList();
                while (resultSet.next()) {
                    beneficiary.add(resultSet.getString("beneficiary_id"));
                }
                beneficiaryList.setModel(new javax.swing.DefaultComboBoxModel(beneficiary.toArray()));
                allAccountList.setSelectedItem(beneficiaryId);

                JOptionPane.showMessageDialog(null, "Beneficiary : " + beneficiaryId + " added succesfully.");

            } else {
                JOptionPane.showMessageDialog(null, "SecondParty account doesnot exists.");
                return;
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Some technical error occured.");
        }


    }//GEN-LAST:event_addBenificaryActionPerformed

    private void beneficiaryListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beneficiaryListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_beneficiaryListActionPerformed

    private void switchoff() {
        accountInfoPanel.setVisible(false);
        personalInfoPanel.setVisible(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accountHolderName;
    private javax.swing.JButton accountInfo;
    private javax.swing.JPanel accountInfoPanel;
    private javax.swing.JLabel accountNo;
    private javax.swing.JTextField accountNumber;
    private javax.swing.JLabel accountType;
    private javax.swing.JLabel accountType2;
    private javax.swing.JButton addBenificary;
    private javax.swing.JComboBox allAccountList;
    private javax.swing.JTextField amount;
    private javax.swing.JComboBox atmAccountList;
    private javax.swing.JButton atmCardRequest;
    private javax.swing.JLabel balance;
    private javax.swing.JComboBox beneficiaryList;
    private javax.swing.JTextField captcha;
    private javax.swing.JTextField captcha1;
    private javax.swing.JButton chequeBookRequest;
    private javax.swing.JButton creditCardRequest;
    private javax.swing.JLabel dob;
    private javax.swing.JLabel emailId;
    private javax.swing.JLabel fatherName;
    private javax.swing.JButton fidDeposit;
    private javax.swing.JLabel firstName;
    private javax.swing.JTextField fixDepositAmount;
    private javax.swing.JButton fixDepositButton;
    private javax.swing.JComboBox fixDepositList;
    private javax.swing.JTextField fixDepositcaptcha;
    private javax.swing.JTextField fixDepositmpin;
    private javax.swing.JLabel fixdepositbalance;
    private javax.swing.JLabel fixdepositshowcaptcha;
    private javax.swing.JButton fundTransfer;
    private javax.swing.JLabel gender;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JInternalFrame jInternalFrame3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JLabel lastName;
    private javax.swing.JButton loanRequest;
    private javax.swing.JLabel loginTime;
    private javax.swing.JButton logout;
    private javax.swing.JLabel middleName;
    private javax.swing.JButton miniStatement;
    private javax.swing.JPanel ministatementpanel;
    private javax.swing.JLabel motherName;
    private javax.swing.JTextField mpin;
    private javax.swing.JTextField mpin2;
    private javax.swing.JComboBox pages;
    private javax.swing.JComboBox period;
    private javax.swing.JLabel permanentAddress;
    private javax.swing.JButton personalInfo;
    private javax.swing.JPanel personalInfoPanel;
    private javax.swing.JButton redeem;
    private javax.swing.JTextField redeemAmount;
    private javax.swing.JTextField redeemCaptcha;
    private javax.swing.JTextField redeemMPIN;
    private javax.swing.JLabel redeemshowcaptcha;
    private javax.swing.JTextField reenterAccountNumber;
    private javax.swing.JLabel residentialAddress;
    private javax.swing.JButton service;
    private javax.swing.JComboBox serviceAccountList;
    private javax.swing.JPanel servicePanel;
    private javax.swing.JLabel showCaptcha;
    private javax.swing.JLabel showCaptcha1;
    private javax.swing.JButton transferFundButton;
    private javax.swing.JLabel welcomeCustomerMessage;
    private javax.swing.JLabel welcomeMessage;
    // End of variables declaration//GEN-END:variables
}
